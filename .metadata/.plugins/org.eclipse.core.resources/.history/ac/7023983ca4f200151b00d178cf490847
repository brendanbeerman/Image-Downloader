/**
TO DO

need to check if a new filename is taken
find the image tags on a webpage, and store them
 
 */


import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.Scanner;

public class driver {
	
	public static String main_directory = "images";
	public static String temp_directory = "temp";
	
	public static void main (String args[]) throws IOException {
		String word = "http://s.4cdn.org/image/fp/atlantis_longcat2.png";
		//String word = "http://=www.4chan.org/";
		
		checkDirectory(main_directory);
		checkDirectory(temp_directory);
		
		//Scanner sc = new Scanner(System.in);
		//String address = get_url(sc); 
		//sc.close();
		
		//find_images(word);
		downloadImage(word);
	}
	
	/*
	 * Simply checks if a directory exists or not
	 * If so return to the main 
	 * If not make the directory
	 */
	public static void checkDirectory (String dir) {
		File directory = new File(dir);
		
		if (directory.exists()) return;
		
		directory.mkdir();		
	}
	
	public static String getURL (Scanner sc) {
		System.out.print("\nThe URL needs a 'http://' or 'https://' in the front.");
		String result;
		
		while (true) {
			System.out.print("\nEnter the desired URL: ");
			result = sc.nextLine();
			
			if (testConnection(result) != null) {
				return result;
			}
		}	
	}
	
	/* 
	 * 
	 */
	public static URLConnection testConnection (String s) {
		try {
			URL url = new URL(s);
			URLConnection connection = url.openConnection();
			connection.connect();
			return connection;
		}
		catch (MalformedURLException e) {
			System.out.print("\nError with the URL try again.");
			return null;
		} 
		catch (IOException e) { 
			System.out.print("\nError with the URL try again.");
			return null;
		}
	}
	
	/* 
	 * 
	 */
	public static void findImageURLs (String address) {

	}
	
	/*
	 * Takes in a string, that is a URL for an image
	 * Reads from the input stream 
	 * Then saves to the output stream, which is a pathway to a file
	 */
	public static void downloadImage(String address) throws IOException {				
		URL url = new URL(address);
		String image_name = url.getFile();
		String destination_path = "./Images/" +image_name.substring(image_name.lastIndexOf("/"));
		
		InputStream input = url.openStream();
		OutputStream output = new FileOutputStream(destination_path);
		
		int length;
		byte []b = new byte[2048];
		
		while ((length = input.read(b)) != -1) output.write(b, 0, length);
		
		input.close();
		output.close();
	}
}
